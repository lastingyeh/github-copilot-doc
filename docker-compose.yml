services:
  # PostgreSQL 資料庫服務
  postgres:
    image: postgres:15-alpine
    container_name: tinyurl-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-tinyurl_db}
      POSTGRES_USER: ${DB_USERNAME:-tinyurl_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-tinyurl_pass}
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d
    networks:
      - tinyurl-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USERNAME:-tinyurl_user} -d ${DB_NAME:-tinyurl_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 快取服務
  redis:
    image: redis:7-alpine
    container_name: tinyurl-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    networks:
      - tinyurl-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

  # Prometheus 監控服務
  prometheus:
    image: prom/prometheus:latest
    container_name: tinyurl-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - '${PROMETHEUS_PORT:-9090}:9090'
    volumes:
      - ./docker/config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - tinyurl-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:9090/-/healthy',
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Grafana 視覺化服務
  grafana:
    image: grafana/grafana:latest
    container_name: tinyurl-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - '${GRAFANA_PORT:-3000}:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/config/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - tinyurl-network
    depends_on:
      - prometheus
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tinyurl-network:
    driver: bridge
    name: tinyurl-network

volumes:
  postgres_data:
    name: tinyurl-postgres-data
  redis_data:
    name: tinyurl-redis-data
  prometheus_data:
    name: tinyurl-prometheus-data
  grafana_data:
    name: tinyurl-grafana-data
